/*
 * stm32f407xx.h
 *
 *  Created on: Sep 18, 2025
 *      Author: LENOVO
 */

#ifndef INC_STM32F407XX_H_
#define INC_STM32F407XX_H_

#include <stdint.h>

#define __vo                                volatile
#define FLASH_BASEADDR						0x08000000U
#define SRAM1_BASEADDR						0x20000000U
#define SRAM2_BASEADDR						0x2001C000U
#define ROM_BASEADDR						0x1FFF0000U
#define SRAM 								SRAM1_BASEADDR


/*
 * AHBx and APBx Bus Peripheral base addresses
 */

#define PERIPH_BASEADDR 						0x40000000U
#define APB1PERIPH_BASEADDR						PERIPH_BASEADDR
#define APB2PERIPH_BASEADDR						0x40010000U
#define AHB1PERIPH_BASEADDR						0x40020000U
#define AHB2PERIPH_BASEADDR						0x50000000U

/*
 * Base addresses of peripherals which are hanging on AHB1 bus*/

#define GPIOA_BASEADDR                   (AHB1PERIPH_BASEADDR + 0x0000)
#define GPIOB_BASEADDR                   (AHB1PERIPH_BASEADDR + 0x0400)
#define GPIOC_BASEADDR 					 (AHB1PERIPH_BASEADDR + 0x0800)
#define GPIOD_BASEADDR 					 (AHB1PERIPH_BASEADDR + 0x0C00)
#define GPIOE_BASEADDR 					 (AHB1PERIPH_BASEADDR + 0x1000)
#define GPIOF_BASEADDR 					 (AHB1PERIPH_BASEADDR + 0x1400)
#define GPIOG_BASEADDR 					 (AHB1PERIPH_BASEADDR + 0x1800)
#define GPIOH_BASEADDR 					 (AHB1PERIPH_BASEADDR + 0x1C00)
#define GPIOI_BASEADDR 					 (AHB1PERIPH_BASEADDR + 0x2000)
#define RCC_BASEADDR                     (AHB1PERIPH_BASEADDR + 0x3800)



/*
 * Base addresses of peripherals which are hanging on APB1 bus*/
#define I2C1_BASEADDR						(APB1PERIPH_BASEADDR + 0x5400)
#define I2C2_BASEADDR						(APB1PERIPH_BASEADDR + 0x5800)
#define I2C3_BASEADDR						(APB1PERIPH_BASEADDR + 0x5C00)

#define SPI2_BASEADDR						(APB1PERIPH_BASEADDR + 0x3800)
#define SPI3_BASEADDR						(APB1PERIPH_BASEADDR + 0x3C00)

#define USART2_BASEADDR						(APB1PERIPH_BASEADDR + 0x4400)
#define USART3_BASEADDR						(APB1PERIPH_BASEADDR + 0x4800)
#define UART4_BASEADDR						(APB1PERIPH_BASEADDR + 0x4C00)
#define UART5_BASEADDR						(APB1PERIPH_BASEADDR + 0x5000)

/*
 * Base addresses of peripherals which are hanging on APB2 bus*/
#define EXTI_BASEADDR						(APB2PERIPH_BASEADDR + 0x3C00)
#define SPI1_BASEADDR						(APB2PERIPH_BASEADDR + 0x3000)
#define SYSCFG_BASEADDR        				(APB2PERIPH_BASEADDR + 0x3800)
#define USART1_BASEADDR						(APB2PERIPH_BASEADDR + 0x1000)
#define USART6_BASEADDR						(APB2PERIPH_BASEADDR + 0x1400)


#define RCC_BASEADDR 						(AHB1PERIPH_BASEADDR + 0x3800)

/******************Peripheral register structure Definitions ********************/

/*GPIO Peripheral Register Definition*/
typedef struct{
	__vo uint32_t MODER;
	__vo uint32_t OTYPER;
	__vo uint32_t OSPEEDR;
	__vo uint32_t PUPDR;
	__vo uint32_t IDR;
	__vo uint32_t ODR;
	__vo uint32_t BSRR;
	__vo uint32_t LCKR;
	__vo uint32_t AFRL;
	__vo uint32_t AFRH;
}GPIO_RegDef_t;

#define GPIOA  				((GPIO_RegDef_t*)GPIOA_BASEADDR) /*typecasted values*/
#define GPIOB  				((GPIO_RegDef_t*)GPIOB_BASEADDR)
#define GPIOC  				((GPIO_RegDef_t*)GPIOC_BASEADDR)
#define GPIOD  				((GPIO_RegDef_t*)GPIOD_BASEADDR)


// we need not create the below ones its redundant
/*
GPIO_RegDef_t *pGPIOA = GPIOA;
GPIO_RegDef_t *pGPIOB = GPIOB;
GPIO_RegDef_t *pGPIOC = GPIOC;
GPIO_RegDef_t *pGPIOD = GPIOD;
*/

/*RCC Peripheral Register Definition *
 *
 */
typedef struct{
	__vo uint32_t CR;
	__vo uint32_t PLLCFGR;
	__vo uint32_t CFGR;
	__vo uint32_t CIR;
	__vo uint32_t AHB1RSTR;
	__vo uint32_t AHB2RSTR;
	__vo uint32_t AHB3RSTR;
	__vo uint32_t APB1RSTR;
	__vo uint32_t APB2RSTR;
	__vo uint32_t RESERVED1;
	__vo uint32_t RESERVED2;
	__vo uint32_t AHB1ENR;
	__vo uint32_t AHB2ENR;
	__vo uint32_t AHB3ENR;
	__vo uint32_t RESERVED3;
	__vo uint32_t APB1ENR;
	__vo uint32_t APB2ENR;
	__vo uint32_t RESERVED4;
	__vo uint32_t RESERVED5;
	__vo uint32_t AHB1LPENR;
	__vo uint32_t AHB2LPENR;
	__vo uint32_t AHB3LPENR;
	__vo uint32_t RESERVED6;
	__vo uint32_t APB1LPENR;
	__vo uint32_t APB2LPENR;
	__vo uint32_t RESERVED7;
	__vo uint32_t RESERVED8;
	__vo uint32_t BDCR;
	__vo uint32_t CSR;
	__vo uint32_t RESERVED9;
	__vo uint32_t RESERVED10;
	__vo uint32_t SSCGR;
	__vo uint32_t PLLI2SCFGR;

}RCC_RegDef_t;

#define RCC 			((RCC_RegDef_t*)RCC_BASEADDR);

/*
RCC_RegDef_t *pRCC = RCC;
*/

/*define clock Enable Macros for GPIOx peripherals
 */

#define GPIOA_PCLK_EN()			( RCC->AHB1ENR |= ( 1<<0 ))
#define GPIOB_PCLK_EN()			( RCC->AHB1ENR |= ( 1<<1 ))

/*define clock Enable Macros for I2Cx peripherals
 */

#define I2C1_PCLK_EN()			( RCC->APB1ENR |= ( 1<<21 ))
#define I2C2_PCLK_EN()			( RCC->APB1ENR |= ( 1<<22 ))
#define I2C3_PCLK_EN()			( RCC->APB1ENR |= ( 1<<23 ))

/*define clock Enable Macros for SPIx peripherals
 */

#define SPI1_PCLK_EN()			( RCC->APB2ENR |= ( 1<<12 ))
#define SPI2_PCLK_EN()			( RCC->APB1ENR |= ( 1<<14 ))
#define SPI3_PCLK_EN()			( RCC->APB1ENR |= ( 1<<15 ))

/*define clock Enable Macros for USARTx peripherals
 */

#define USART1_PCLK_EN()			( RCC->APB2ENR |= ( 1<<4 ))
#define USART2_PCLK_EN()			( RCC->APB1ENR |= ( 1<<17 ))
#define USART3_PCLK_EN()			( RCC->APB1ENR |= ( 1<<18 ))
#define USART6_PCLK_EN()			( RCC->APB2ENR |= ( 1<<5 ))
/*define clock Enable Macros for UARTx peripherals
 */

#define UART4_PCLK_EN()			( RCC->AHB1ENR |= ( 1<<19 ))
#define UART5_PCLK_EN()			( RCC->AHB1ENR |= ( 1<<20 ))



/*define clock Disable Macros for GPIOx peripherals
 */

#define GPIOA_PCLK_DI()			( RCC->AHB1ENR &= ~( 1<<0 ))
#define GPIOB_PCLK_DI()			( RCC->AHB1ENR &= ~( 1<<1 ))

/*define clock Disable Macros for I2Cx peripherals
 */

#define I2C1_PCLK_DI()			( RCC->APB1ENR &= ~( 1<<21 ))
#define I2C2_PCLK_DI()			( RCC->APB1ENR &= ~( 1<<22 ))
#define I2C3_PCLK_DI()			( RCC->APB1ENR &= ~( 1<<23 ))

/*define clock Disable Macros for SPIx peripherals
 */

#define SPI1_PCLK_DI()			( RCC->APB2ENR &= ~( 1<<12 ))
#define SPI2_PCLK_DI()			( RCC->APB1ENR &= ~( 1<<14 ))
#define SPI3_PCLK_DI()			( RCC->APB1ENR &= ~( 1<<15 ))

/*define clock Disable Macros for USARTx peripherals
 */

#define USART1_PCLK_DI()			( RCC->APB2ENR &= ~( 1<<4 ))
#define USART2_PCLK_DI()			( RCC->APB1ENR &= ~( 1<<17 ))
#define USART3_PCLK_DI()			( RCC->APB1ENR &= ~( 1<<18 ))
#define USART6_PCLK_DI()			( RCC->APB2ENR &= ~( 1<<5 ))
/*define clock Disable Macros for UARTx peripherals
 */

#define UART4_PCLK_DI()			( RCC->AHB1ENR &= ~( 1<<19 ))
#define UART5_PCLK_DI()			( RCC->AHB1ENR &= ~( 1<<20 ))

#endif /* INC_STM32F407XX_H_ */
